services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: attendkal-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-attendkal_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?DB_PASSWORD environment variable is required}
      POSTGRES_DB: ${DB_NAME:-attendkal_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-attendkal_user} -d ${DB_NAME:-attendkal_db}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - attendkal-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: attendkal-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DATABASE_URL: postgresql://${DB_USER:-attendkal_user}:${DB_PASSWORD}@db:5432/${DB_NAME:-attendkal_db}?schema=public
      JWT_SECRET: ${JWT_SECRET:?JWT_SECRET environment variable is required}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - attendkal-network

  # PostgreSQL Admin (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: attendkal-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@attendkal.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:?PGADMIN_PASSWORD environment variable is required}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - attendkal-network
    profiles:
      - admin

# Volumes
volumes:
  pgdata:
    driver: local
    name: attendkal-pgdata
  pgadmin_data:
    driver: local
    name: attendkal-pgadmin

# Networks
networks:
  attendkal-network:
    driver: bridge
    name: attendkal-network
